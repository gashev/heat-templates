#!/usr/bin/python
import grp
import pwd
import os

master = os.environ['master']
master_name = os.environ['master_name']
nodes = eval(os.environ['nodes'])
node_names = eval(os.environ['node_names'])

# Configure /etc/ansible/hosts
f = open('/etc/ansible/hosts', 'w')
f.write("[master]\n%s\n\n" % (master))
f.write("[nodes]\n")
for node in nodes:
    f.write("%s\n" % (node))
f.close()
uid = pwd.getpwnam('cloud').pw_uid
gid = grp.getgrnam('cloud').gr_gid
os.chown('/etc/ansible/hosts', uid, gid)

# Configure /etc/hosts
f = open('/etc/hosts', 'w')
f.write("127.0.0.1 localhost\n\n")
f.write("%s %s\n" % (master, master_name)) 
for key,value in enumerate(nodes):
    f.write("%s %s\n" % (nodes[key], node_names[key]))
f.close() 

# Decode /opt/ansible.tar.gz from base64 and extract files.
os.system('base64 -d /opt/ansible.tar.gz >/opt/ansible-tmp.tar.gz')
os.remove('/opt/ansible.tar.gz')
os.system('tar xvvf /opt/ansible-tmp.tar.gz -C /opt')
os.remove('/opt/ansible-tmp.tar.gz')

os.chown('/opt/ansible', uid, gid)

# Create known_hosts file.
os.system('ssh-keyscan %s >/home/cloud/.ssh/known_hosts' % (master))
for node in nodes:
    os.system('ssh-keyscan %s >>/home/cloud/.ssh/known_hosts' % (node))
os.chown('/home/cloud/.ssh/known_hosts', uid, gid)

# Run the ansible playbook.
os.system('sudo su cloud -c "cd /opt/ansible; /usr/bin/ansible-playbook kubernetes.yaml"')
